--- 
- name: Configure Jenkins server on AWS
  hosts: jenkins-server
  become: yes
  
  vars: 
    packages:
      - software-properties-common
      - git
      - jenkins
      - maven
      - mysql-server
      - ansible

  tasks:

  - name: Configure apt key for jenkins repository
    action: apt_key url=http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key state=present 

  - name: Add jenkins APT repository
    action: apt_repository repo='deb http://pkg.jenkins-ci.org/debian binary/' state=present

  - name: Install java 8 preresequesits
    apt: name=python-software-properties

  - name: Add Java 8 repository
    apt_repository: repo='ppa:webupd8team/java'

  - name: Add ansible repository
    apt_repository: repo='ppa:ansible/ansible'

  - name: update apt-cache if needed
    apt: update_cache=yes

  - name: Agree to oracle license
    debconf: name=oracle-java8-installer question=shared/accepted-oracle-license-v1-1 vtype=select value=true

  - name: Install Java 8
    apt: name=oracle-java8-installer force=yes
  
  - name: Install {{ item }}
    apt: pkg={{ item }} state=present
    become: yes
    with_items: "{{packages}}"

  - name: Update mysql config file
    lineinfile: dest=/etc/mysql/my.cnf
                regexp='#general_log'
                line='lower-case-table-names=1'
                state=present

  - name: Update ansible config file
    lineinfile: dest=/etc/ansible/ansible.cfg
                regexp='^#host_key_checking'
                line='host_key_checking=False'
                state=present

  - name: Restart mysql
    command: bash -lc "sudo service mysql restart"

  - name: Stopping Jenkins
    shell: sudo su - root -c 'service jenkins stop'
    args:
     executable: /bin/bash

  - copy:
     src: /home/vagrant/Milestone3/jenkins-config.xml
     dest: /var/lib/jenkins/config.xml
     owner: ubuntu
     group: ubuntu
     mode: 0777


  - name: Configure JVM Arguments to disable security
    sudo: true
    lineinfile: dest=/etc/default/jenkins
                regexp=''
                insertafter='EOF'
                line='JAVA_ARGS="-Djenkins.install.runSetupWizard=false"'

  - name: Restarting Jenkins
    shell: sudo su - root -c 'service jenkins restart'
    args:
     executable: /bin/bash 

  - name: Wait for jenkins to restart
    wait_for: host=localhost port=8080 delay=30

  - name: Install plugin
    jenkins_plugin: name=github state=present
  
  - name: Restarting Jenkins
    shell: sudo su - root -c 'service jenkins restart'
    args:
     executable: /bin/bash

  - name: Wait for jenkins to restart
    wait_for: host=localhost port=8080 delay=30

    
  - copy:
     src: /home/vagrant/Milestone3/jconfig.xml
     dest: /home/ubuntu/job-config.xml
     owner: jenkins
     group: jenkins
     mode: 0644

  - copy:
     src: /home/vagrant/Milestone3/jconfig-rolling.xml
     dest: /home/ubuntu/rolling-job-config.xml
     owner: jenkins
     group: jenkins
     mode: 0644

  - copy:
     src: /home/vagrant/Milestone3/nitin.pem
     dest: /home/ubuntu/nitin.pem
     owner: jenkins
     group: jenkins
     mode: 0400

  - copy:
     src: /home/vagrant/Milestone3/iTrust.yml
     dest: /home/ubuntu/iTrust.yml
     owner: ubuntu
     group: ubuntu
     mode: 0644

  - copy:
     src: /home/vagrant/Milestone3/iTrust_Rolling.yml
     dest: /home/ubuntu/iTrust_Rolling.yml
     owner: ubuntu
     group: ubuntu
     mode: 0644
   
  - copy:
     src: /home/vagrant/Milestone3/iTrust-inventory
     dest: /home/ubuntu/iTrust-inventory
     owner: ubuntu
     group: ubuntu
     mode: 0644

  - name: Install Jenkins CLI on Host
    action: shell wget http://localhost:8080/jnlpJars/jenkins-cli.jar
    args: 
      creates: /home/ubuntu/jenkins-cli.jar

  - name: Create Job from job.xml
    action: shell java -jar jenkins-cli.jar -s http://localhost:8080/ create-job iTrustDemo < job-config.xml

  - name: Create Rolling Job update for iTrust
    action: shell java -jar jenkins-cli.jar -s http://localhost:8080/ create-job iTrustDemo-Rolling < rolling-job-config.xml

